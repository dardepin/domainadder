---
# playbook for changing secretnet control server
# usage: ansible-playbook secret.yml --ask-vault-pass
- hosts: ped
  become: true
  remote_user: asergeev
  gather_facts: true
  tasks:
    - name: Add vars
      ansible.builtin.include_vars:
        file: astra.yml

    - name: Copy notify script for Astra
      ansible.builtin.copy:
        src: files/notify-all-astra.sh
        dest: /usr/bin/notify-all
        owner: root
        mode: '0700'
      when: ansible_distribution == "Astra Linux (Orel)"

    - name: Copy notify script for Ubuntu
      ansible.builtin.copy:
        src: files/notify-all-ubuntu.sh
        dest: /usr/bin/notify-all
        owner: root
        mode: '0700'
      when: ansible_distribution == "Ubuntu"

    - name: Check for existing sns install
      ansible.builtin.stat:
        path: "/opt/secretnet/bin/snnetctl"
      register: result1

    - name: Stop to play
      when: not "result1.stat.exists"
      block:
        - name: No update required
          ansible.builtin.debug:
            msg: "SNS not found, stopping"
        - name: End play
          ansible.builtin.meta: end_host

    - name: Notify users to complete
      ansible.builtin.command: /usr/bin/notify-all -t 60000 "Информация" "Компьютер будет перезагружен через одну минуту для установки SecretNet Studio"
      changed_when: false

    - name: Wait for users
      ansible.builtin.wait_for:
        timeout: 60
      delegate_to: localhost

    - name: Reboot # reboot required - agents may hang during the process
      ansible.builtin.reboot:

    - name: Join to new server
      ansible.builtin.shell: "echo -n \"{{ domain_password }}\" | sudo /opt/secretnet/bin/snnetctl -e -c {{ sns_server }} -l LDS -u {{ domain_admin }}"
      register: result2
      changed_when: false

    - name: Display result
      ansible.builtin.debug:
        msg: "Result: {{ result2 }}"
...
